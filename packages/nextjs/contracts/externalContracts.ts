/**
 * @example
 * const externalContracts = {
 *   1: {
 *     DAI: {
 *       address: "0x...",
 *       abi: [...],
 *     },
 *   },
 * } as const;
 */
const externalContracts = {
  56: {
    ProxyOFTV2: {
      address: "0x201263cea08e8f1d6e2fdd1fd2ca44bf6145e2af",
      abi: [
        {
          inputs: [
            { internalType: "address", name: "_token", type: "address" },
            { internalType: "uint8", name: "_sharedDecimals", type: "uint8" },
            { internalType: "address", name: "_lzEndpoint", type: "address" },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { indexed: false, internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { indexed: false, internalType: "uint64", name: "_nonce", type: "uint64" },
            { indexed: false, internalType: "bytes32", name: "_hash", type: "bytes32" },
          ],
          name: "CallOFTReceivedSuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { indexed: false, internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { indexed: false, internalType: "uint64", name: "_nonce", type: "uint64" },
            { indexed: false, internalType: "bytes", name: "_payload", type: "bytes" },
            { indexed: false, internalType: "bytes", name: "_reason", type: "bytes" },
          ],
          name: "MessageFailed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: false, internalType: "address", name: "_address", type: "address" }],
          name: "NonContractAddress",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { indexed: true, internalType: "address", name: "_to", type: "address" },
            { indexed: false, internalType: "uint256", name: "_amount", type: "uint256" },
          ],
          name: "ReceiveFromChain",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { indexed: false, internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { indexed: false, internalType: "uint64", name: "_nonce", type: "uint64" },
            { indexed: false, internalType: "bytes32", name: "_payloadHash", type: "bytes32" },
          ],
          name: "RetryMessageSuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { indexed: true, internalType: "address", name: "_from", type: "address" },
            { indexed: true, internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { indexed: false, internalType: "uint256", name: "_amount", type: "uint256" },
          ],
          name: "SendToChain",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { indexed: false, internalType: "uint16", name: "_type", type: "uint16" },
            { indexed: false, internalType: "uint256", name: "_minDstGas", type: "uint256" },
          ],
          name: "SetMinDstGas",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: false, internalType: "address", name: "precrime", type: "address" }],
          name: "SetPrecrime",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint16", name: "_remoteChainId", type: "uint16" },
            { indexed: false, internalType: "bytes", name: "_path", type: "bytes" },
          ],
          name: "SetTrustedRemote",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint16", name: "_remoteChainId", type: "uint16" },
            { indexed: false, internalType: "bytes", name: "_remoteAddress", type: "bytes" },
          ],
          name: "SetTrustedRemoteAddress",
          type: "event",
        },
        {
          inputs: [],
          name: "DEFAULT_PAYLOAD_SIZE_LIMIT",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NO_EXTRA_GAS",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "PT_SEND",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "PT_SEND_AND_CALL",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { internalType: "uint64", name: "_nonce", type: "uint64" },
            { internalType: "bytes32", name: "_from", type: "bytes32" },
            { internalType: "address", name: "_to", type: "address" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
            { internalType: "uint256", name: "_gasForCall", type: "uint256" },
          ],
          name: "callOnOFTReceived",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "circulatingSupply",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "", type: "uint16" },
            { internalType: "bytes", name: "", type: "bytes" },
            { internalType: "uint64", name: "", type: "uint64" },
          ],
          name: "creditedPackets",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
            { internalType: "uint64", name: "_dstGasForCall", type: "uint64" },
            { internalType: "bool", name: "_useZro", type: "bool" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
          ],
          name: "estimateSendAndCallFee",
          outputs: [
            { internalType: "uint256", name: "nativeFee", type: "uint256" },
            { internalType: "uint256", name: "zroFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bool", name: "_useZro", type: "bool" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
          ],
          name: "estimateSendFee",
          outputs: [
            { internalType: "uint256", name: "nativeFee", type: "uint256" },
            { internalType: "uint256", name: "zroFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "", type: "uint16" },
            { internalType: "bytes", name: "", type: "bytes" },
            { internalType: "uint64", name: "", type: "uint64" },
          ],
          name: "failedMessages",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
          ],
          name: "forceResumeReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_version", type: "uint16" },
            { internalType: "uint16", name: "_chainId", type: "uint16" },
            { internalType: "address", name: "", type: "address" },
            { internalType: "uint256", name: "_configType", type: "uint256" },
          ],
          name: "getConfig",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "_remoteChainId", type: "uint16" }],
          name: "getTrustedRemoteAddress",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
          ],
          name: "isTrustedRemote",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lzEndpoint",
          outputs: [{ internalType: "contract ILayerZeroEndpoint", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { internalType: "uint64", name: "_nonce", type: "uint64" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
          ],
          name: "lzReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "", type: "uint16" },
            { internalType: "uint16", name: "", type: "uint16" },
          ],
          name: "minDstGasLookup",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { internalType: "uint64", name: "_nonce", type: "uint64" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
          ],
          name: "nonblockingLzReceive",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "outboundAmount",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "", type: "uint16" }],
          name: "payloadSizeLimitLookup",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "precrime",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [
            { internalType: "uint16", name: "_srcChainId", type: "uint16" },
            { internalType: "bytes", name: "_srcAddress", type: "bytes" },
            { internalType: "uint64", name: "_nonce", type: "uint64" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
          ],
          name: "retryMessage",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_from", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bytes", name: "_payload", type: "bytes" },
            { internalType: "uint64", name: "_dstGasForCall", type: "uint64" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
          ],
          name: "sendAndCall",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_from", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
          ],
          name: "sendFrom",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_version", type: "uint16" },
            { internalType: "uint16", name: "_chainId", type: "uint16" },
            { internalType: "uint256", name: "_configType", type: "uint256" },
            { internalType: "bytes", name: "_config", type: "bytes" },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "uint16", name: "_packetType", type: "uint16" },
            { internalType: "uint256", name: "_minGas", type: "uint256" },
          ],
          name: "setMinDstGas",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "uint256", name: "_size", type: "uint256" },
          ],
          name: "setPayloadSizeLimit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_precrime", type: "address" }],
          name: "setPrecrime",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }],
          name: "setReceiveVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "_version", type: "uint16" }],
          name: "setSendVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_remoteChainId", type: "uint16" },
            { internalType: "bytes", name: "_path", type: "bytes" },
          ],
          name: "setTrustedRemote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint16", name: "_remoteChainId", type: "uint16" },
            { internalType: "bytes", name: "_remoteAddress", type: "bytes" },
          ],
          name: "setTrustedRemoteAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sharedDecimals",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
          name: "supportsInterface",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "", type: "uint16" }],
          name: "trustedRemoteLookup",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
      ],
    },
  },
  41923: {
    ArbSys: {
      address: "0x0000000000000000000000000000000000000064",
      abi: [
        {
          inputs: [
            { internalType: "uint256", name: "requested", type: "uint256" },
            { internalType: "uint256", name: "current", type: "uint256" },
          ],
          name: "InvalidBlockNumber",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "caller",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "destination",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "uniqueId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "batchNumber",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "indexInBatch",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "arbBlockNum",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethBlockNum",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "callvalue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "L2ToL1Transaction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "caller",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "destination",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "hash",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "position",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "arbBlockNum",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethBlockNum",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "callvalue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "L2ToL1Tx",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "reserved",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "hash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "position",
              type: "uint256",
            },
          ],
          name: "SendMerkleUpdate",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "arbBlockNum",
              type: "uint256",
            },
          ],
          name: "arbBlockHash",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "arbBlockNumber",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "arbChainID",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "arbOSVersion",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStorageGasAvailable",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isTopLevelCall",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "unused", type: "address" },
          ],
          name: "mapL1SenderContractAddressToL2Alias",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "myCallersAddressWithoutAliasing",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "sendMerkleTreeState",
          outputs: [
            { internalType: "uint256", name: "size", type: "uint256" },
            { internalType: "bytes32", name: "root", type: "bytes32" },
            {
              internalType: "bytes32[]",
              name: "partials",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "destination",
              type: "address",
            },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "sendTxToL1",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "wasMyCallersAddressAliased",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "destination",
              type: "address",
            },
          ],
          name: "withdrawEth",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "payable",
          type: "function",
        },
      ],
    },
  },
  42161: {
    ERC20Outbox: {
      address: "0x6339965Cb3002f5c746895e4eD895bd775dbfdf9",
      abi: [
        { inputs: [], name: "AlreadyInit", type: "error" },
        { inputs: [{ internalType: "uint256", name: "index", type: "uint256" }], name: "AlreadySpent", type: "error" },
        { inputs: [], name: "BadPostUpgradeInit", type: "error" },
        { inputs: [], name: "BridgeCallFailed", type: "error" },
        { inputs: [], name: "HadZeroInit", type: "error" },
        {
          inputs: [
            { internalType: "uint256", name: "actualLength", type: "uint256" },
            { internalType: "uint256", name: "maxProofLength", type: "uint256" },
          ],
          name: "MerkleProofTooLong",
          type: "error",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "owner", type: "address" },
          ],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "rollup", type: "address" },
          ],
          name: "NotRollup",
          type: "error",
        },
        {
          inputs: [
            { internalType: "uint256", name: "index", type: "uint256" },
            { internalType: "uint256", name: "maxIndex", type: "uint256" },
          ],
          name: "PathNotMinimal",
          type: "error",
        },
        {
          inputs: [{ internalType: "uint256", name: "proofLength", type: "uint256" }],
          name: "ProofTooLong",
          type: "error",
        },
        { inputs: [], name: "RollupNotChanged", type: "error" },
        { inputs: [], name: "SimulationOnlyEntrypoint", type: "error" },
        { inputs: [{ internalType: "bytes32", name: "root", type: "bytes32" }], name: "UnknownRoot", type: "error" },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: true, internalType: "address", name: "l2Sender", type: "address" },
            { indexed: true, internalType: "uint256", name: "zero", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "transactionIndex", type: "uint256" },
          ],
          name: "OutBoxTransactionExecuted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "outputRoot", type: "bytes32" },
            { indexed: true, internalType: "bytes32", name: "l2BlockHash", type: "bytes32" },
          ],
          name: "SendRootUpdated",
          type: "event",
        },
        {
          inputs: [],
          name: "OUTBOX_VERSION",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "bridge",
          outputs: [{ internalType: "contract IBridge", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "l2Sender", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "l2Block", type: "uint256" },
            { internalType: "uint256", name: "l1Block", type: "uint256" },
            { internalType: "uint256", name: "l2Timestamp", type: "uint256" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "calculateItemHash",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
            { internalType: "uint256", name: "path", type: "uint256" },
            { internalType: "bytes32", name: "item", type: "bytes32" },
          ],
          name: "calculateMerkleRoot",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
            { internalType: "uint256", name: "index", type: "uint256" },
            { internalType: "address", name: "l2Sender", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "l2Block", type: "uint256" },
            { internalType: "uint256", name: "l1Block", type: "uint256" },
            { internalType: "uint256", name: "l2Timestamp", type: "uint256" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "executeTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint256", name: "index", type: "uint256" },
            { internalType: "address", name: "l2Sender", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "l2Block", type: "uint256" },
            { internalType: "uint256", name: "l1Block", type: "uint256" },
            { internalType: "uint256", name: "l2Timestamp", type: "uint256" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "executeTransactionSimulation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "contract IBridge", name: "_bridge", type: "address" }],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
          name: "isSpent",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1BatchNum",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1Block",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1EthBlock",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1OutputId",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1Sender",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1Timestamp",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "l2ToL1WithdrawalAmount",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "postUpgradeInit", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [],
          name: "rollup",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          name: "roots",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          name: "spent",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "updateRollupAddress", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [
            { internalType: "bytes32", name: "root", type: "bytes32" },
            { internalType: "bytes32", name: "l2BlockHash", type: "bytes32" },
          ],
          name: "updateSendRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
    NodeInterface: {
      address: "0x00000000000000000000000000000000000000C8",
      abi: [
        {
          inputs: [
            { internalType: "uint64", name: "size", type: "uint64" },
            { internalType: "uint64", name: "leaf", type: "uint64" },
          ],
          name: "constructOutboxProof",
          outputs: [
            { internalType: "bytes32", name: "send", type: "bytes32" },
            { internalType: "bytes32", name: "root", type: "bytes32" },
            { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "uint256", name: "deposit", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "l2CallValue", type: "uint256" },
            { internalType: "address", name: "excessFeeRefundAddress", type: "address" },
            { internalType: "address", name: "callValueRefundAddress", type: "address" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "estimateRetryableTicket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "blockNum", type: "uint64" }],
          name: "findBatchContainingBlock",
          outputs: [{ internalType: "uint64", name: "batch", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "bool", name: "contractCreation", type: "bool" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "gasEstimateComponents",
          outputs: [
            { internalType: "uint64", name: "gasEstimate", type: "uint64" },
            { internalType: "uint64", name: "gasEstimateForL1", type: "uint64" },
            { internalType: "uint256", name: "baseFee", type: "uint256" },
            { internalType: "uint256", name: "l1BaseFeeEstimate", type: "uint256" },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "bool", name: "contractCreation", type: "bool" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "gasEstimateL1Component",
          outputs: [
            { internalType: "uint64", name: "gasEstimateForL1", type: "uint64" },
            { internalType: "uint256", name: "baseFee", type: "uint256" },
            { internalType: "uint256", name: "l1BaseFeeEstimate", type: "uint256" },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "blockHash", type: "bytes32" }],
          name: "getL1Confirmations",
          outputs: [{ internalType: "uint64", name: "confirmations", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint256", name: "batchNum", type: "uint256" },
            { internalType: "uint64", name: "index", type: "uint64" },
          ],
          name: "legacyLookupMessageBatchProof",
          outputs: [
            { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
            { internalType: "uint256", name: "path", type: "uint256" },
            { internalType: "address", name: "l2Sender", type: "address" },
            { internalType: "address", name: "l1Dest", type: "address" },
            { internalType: "uint256", name: "l2Block", type: "uint256" },
            { internalType: "uint256", name: "l1Block", type: "uint256" },
            { internalType: "uint256", name: "timestamp", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "bytes", name: "calldataForL1", type: "bytes" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nitroGenesisBlock",
          outputs: [{ internalType: "uint256", name: "number", type: "uint256" }],
          stateMutability: "pure",
          type: "function",
        },
      ],
    },
    Rollup: {
      address: "0xBaE3B462a2A7fb758F66D91170514C10B14Ce914",
      abi: [
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "address", name: "previousAdmin", type: "address" },
            { indexed: false, internalType: "address", name: "newAdmin", type: "address" },
          ],
          name: "AdminChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "beacon", type: "address" }],
          name: "BeaconUpgraded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint64", name: "nodeNum", type: "uint64" },
            { indexed: false, internalType: "bytes32", name: "blockHash", type: "bytes32" },
            { indexed: false, internalType: "bytes32", name: "sendRoot", type: "bytes32" },
          ],
          name: "NodeConfirmed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint64", name: "nodeNum", type: "uint64" },
            { indexed: true, internalType: "bytes32", name: "parentNodeHash", type: "bytes32" },
            { indexed: true, internalType: "bytes32", name: "nodeHash", type: "bytes32" },
            { indexed: false, internalType: "bytes32", name: "executionHash", type: "bytes32" },
            {
              components: [
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "beforeState",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "afterState",
                  type: "tuple",
                },
                { internalType: "uint64", name: "numBlocks", type: "uint64" },
              ],
              indexed: false,
              internalType: "struct Assertion",
              name: "assertion",
              type: "tuple",
            },
            { indexed: false, internalType: "bytes32", name: "afterInboxBatchAcc", type: "bytes32" },
            { indexed: false, internalType: "bytes32", name: "wasmModuleRoot", type: "bytes32" },
            { indexed: false, internalType: "uint256", name: "inboxMaxCount", type: "uint256" },
          ],
          name: "NodeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "uint64", name: "nodeNum", type: "uint64" }],
          name: "NodeRejected",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "uint256", name: "id", type: "uint256" }],
          name: "OwnerFunctionCalled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: false, internalType: "address", name: "account", type: "address" }],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint64", name: "challengeIndex", type: "uint64" },
            { indexed: false, internalType: "address", name: "asserter", type: "address" },
            { indexed: false, internalType: "address", name: "challenger", type: "address" },
            { indexed: false, internalType: "uint64", name: "challengedNode", type: "uint64" },
          ],
          name: "RollupChallengeStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "bytes32", name: "machineHash", type: "bytes32" },
            { indexed: false, internalType: "uint256", name: "chainId", type: "uint256" },
          ],
          name: "RollupInitialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: false, internalType: "address", name: "account", type: "address" }],
          name: "Unpaused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "implementation", type: "address" }],
          name: "Upgraded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "implementation", type: "address" }],
          name: "UpgradedSecondary",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint256", name: "initialBalance", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "finalBalance", type: "uint256" },
          ],
          name: "UserStakeUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint256", name: "initialBalance", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "finalBalance", type: "uint256" },
          ],
          name: "UserWithdrawableFundsUpdated",
          type: "event",
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          name: "_stakerMap",
          outputs: [
            { internalType: "uint256", name: "amountStaked", type: "uint256" },
            { internalType: "uint64", name: "index", type: "uint64" },
            { internalType: "uint64", name: "latestStakedNode", type: "uint64" },
            { internalType: "uint64", name: "currentChallenge", type: "uint64" },
            { internalType: "bool", name: "isStaked", type: "bool" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "amountStaked",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "anyTrustFastConfirmer",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseStake",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "bridge",
          outputs: [{ internalType: "contract IBridge", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "chainId",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "challengeManager",
          outputs: [{ internalType: "contract IChallengeManager", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "confirmPeriodBlocks",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "beforeState",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "afterState",
                  type: "tuple",
                },
                { internalType: "uint64", name: "numBlocks", type: "uint64" },
              ],
              internalType: "struct Assertion",
              name: "assertion",
              type: "tuple",
            },
          ],
          name: "createNitroMigrationGenesis",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "currentChallenge",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "extraChallengeTimeBlocks",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "firstUnresolvedNode",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint64", name: "nodeNum", type: "uint64" },
            { internalType: "bytes32", name: "blockHash", type: "bytes32" },
            { internalType: "bytes32", name: "sendRoot", type: "bytes32" },
          ],
          name: "forceConfirmNode",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint64", name: "prevNode", type: "uint64" },
            { internalType: "uint256", name: "prevNodeInboxMaxCount", type: "uint256" },
            {
              components: [
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "beforeState",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      components: [
                        { internalType: "bytes32[2]", name: "bytes32Vals", type: "bytes32[2]" },
                        { internalType: "uint64[2]", name: "u64Vals", type: "uint64[2]" },
                      ],
                      internalType: "struct GlobalState",
                      name: "globalState",
                      type: "tuple",
                    },
                    { internalType: "enum MachineStatus", name: "machineStatus", type: "uint8" },
                  ],
                  internalType: "struct ExecutionState",
                  name: "afterState",
                  type: "tuple",
                },
                { internalType: "uint64", name: "numBlocks", type: "uint64" },
              ],
              internalType: "struct Assertion",
              name: "assertion",
              type: "tuple",
            },
            { internalType: "bytes32", name: "expectedNodeHash", type: "bytes32" },
          ],
          name: "forceCreateNode",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address[]", name: "staker", type: "address[]" }],
          name: "forceRefundStaker",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address[]", name: "stakerA", type: "address[]" },
            { internalType: "address[]", name: "stakerB", type: "address[]" },
          ],
          name: "forceResolveChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "nodeNum", type: "uint64" }],
          name: "getNode",
          outputs: [
            {
              components: [
                { internalType: "bytes32", name: "stateHash", type: "bytes32" },
                { internalType: "bytes32", name: "challengeHash", type: "bytes32" },
                { internalType: "bytes32", name: "confirmData", type: "bytes32" },
                { internalType: "uint64", name: "prevNum", type: "uint64" },
                { internalType: "uint64", name: "deadlineBlock", type: "uint64" },
                { internalType: "uint64", name: "noChildConfirmedBeforeBlock", type: "uint64" },
                { internalType: "uint64", name: "stakerCount", type: "uint64" },
                { internalType: "uint64", name: "childStakerCount", type: "uint64" },
                { internalType: "uint64", name: "firstChildBlock", type: "uint64" },
                { internalType: "uint64", name: "latestChildNumber", type: "uint64" },
                { internalType: "uint64", name: "createdAtBlock", type: "uint64" },
                { internalType: "bytes32", name: "nodeHash", type: "bytes32" },
              ],
              internalType: "struct Node",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "nodeNum", type: "uint64" }],
          name: "getNodeCreationBlockForLogLookup",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "getStaker",
          outputs: [
            {
              components: [
                { internalType: "uint256", name: "amountStaked", type: "uint256" },
                { internalType: "uint64", name: "index", type: "uint64" },
                { internalType: "uint64", name: "latestStakedNode", type: "uint64" },
                { internalType: "uint64", name: "currentChallenge", type: "uint64" },
                { internalType: "bool", name: "isStaked", type: "bool" },
              ],
              internalType: "struct IRollupCore.Staker",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "stakerNum", type: "uint64" }],
          name: "getStakerAddress",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "inbox",
          outputs: [{ internalType: "contract IInboxBase", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "uint64", name: "confirmPeriodBlocks", type: "uint64" },
                { internalType: "uint64", name: "extraChallengeTimeBlocks", type: "uint64" },
                { internalType: "address", name: "stakeToken", type: "address" },
                { internalType: "uint256", name: "baseStake", type: "uint256" },
                { internalType: "bytes32", name: "wasmModuleRoot", type: "bytes32" },
                { internalType: "address", name: "owner", type: "address" },
                { internalType: "address", name: "loserStakeEscrow", type: "address" },
                { internalType: "uint256", name: "chainId", type: "uint256" },
                { internalType: "string", name: "chainConfig", type: "string" },
                { internalType: "uint64", name: "genesisBlockNum", type: "uint64" },
                {
                  components: [
                    { internalType: "uint256", name: "delayBlocks", type: "uint256" },
                    { internalType: "uint256", name: "futureBlocks", type: "uint256" },
                    { internalType: "uint256", name: "delaySeconds", type: "uint256" },
                    { internalType: "uint256", name: "futureSeconds", type: "uint256" },
                  ],
                  internalType: "struct ISequencerInbox.MaxTimeVariation",
                  name: "sequencerInboxMaxTimeVariation",
                  type: "tuple",
                },
              ],
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              components: [
                { internalType: "contract IBridge", name: "bridge", type: "address" },
                { internalType: "contract ISequencerInbox", name: "sequencerInbox", type: "address" },
                { internalType: "contract IInboxBase", name: "inbox", type: "address" },
                { internalType: "contract IOutbox", name: "outbox", type: "address" },
                { internalType: "contract IRollupEventInbox", name: "rollupEventInbox", type: "address" },
                { internalType: "contract IChallengeManager", name: "challengeManager", type: "address" },
                { internalType: "address", name: "rollupAdminLogic", type: "address" },
                { internalType: "contract IRollupUser", name: "rollupUserLogic", type: "address" },
                { internalType: "address", name: "validatorUtils", type: "address" },
                { internalType: "address", name: "validatorWalletCreator", type: "address" },
              ],
              internalType: "struct ContractDependencies",
              name: "connectedContracts",
              type: "tuple",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "isStaked",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "isStakedOnLatestConfirmed",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          name: "isValidator",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "isZombie",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastStakeBlock",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "latestConfirmed",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "latestNodeCreated",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "staker", type: "address" }],
          name: "latestStakedNode",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "loserStakeEscrow",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "minimumAssertionPeriod",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint64", name: "nodeNum", type: "uint64" },
            { internalType: "address", name: "staker", type: "address" },
          ],
          name: "nodeHasStaker",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "outbox",
          outputs: [{ internalType: "contract IOutbox", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "pause", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [],
          name: "paused",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "proxiableUUID",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_outbox", type: "address" }],
          name: "removeOldOutbox",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        { inputs: [], name: "resume", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [],
          name: "rollupDeploymentBlock",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "rollupEventInbox",
          outputs: [{ internalType: "contract IRollupEventInbox", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "sequencerInbox",
          outputs: [{ internalType: "contract ISequencerInbox", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_anyTrustFastConfirmer", type: "address" }],
          name: "setAnyTrustFastConfirmer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "newBaseStake", type: "uint256" }],
          name: "setBaseStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "newConfirmPeriod", type: "uint64" }],
          name: "setConfirmPeriodBlocks",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_inbox", type: "address" },
            { internalType: "bool", name: "_enabled", type: "bool" },
          ],
          name: "setDelayedInbox",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint64", name: "newExtraTimeBlocks", type: "uint64" }],
          name: "setExtraChallengeTimeBlocks",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "contract IInboxBase", name: "newInbox", type: "address" }],
          name: "setInbox",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newLoserStakerEscrow", type: "address" }],
          name: "setLoserStakeEscrow",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "newPeriod", type: "uint256" }],
          name: "setMinimumAssertionPeriod",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "contract IOutbox", name: "_outbox", type: "address" }],
          name: "setOutbox",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "setOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_sequencerInbox", type: "address" }],
          name: "setSequencerInbox",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newStakeToken", type: "address" }],
          name: "setStakeToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address[]", name: "_validator", type: "address[]" },
            { internalType: "bool[]", name: "_val", type: "bool[]" },
          ],
          name: "setValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bool", name: "_validatorWhitelistDisabled", type: "bool" }],
          name: "setValidatorWhitelistDisabled",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "newWasmModuleRoot", type: "bytes32" }],
          name: "setWasmModuleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "stakeToken",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stakerCount",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalWithdrawableFunds",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "beacon", type: "address" },
            { internalType: "address", name: "newImplementation", type: "address" },
          ],
          name: "upgradeBeacon",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newImplementation", type: "address" }],
          name: "upgradeSecondaryTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "newImplementation", type: "address" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "upgradeSecondaryToAndCall",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newImplementation", type: "address" }],
          name: "upgradeTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "newImplementation", type: "address" },
            { internalType: "bytes", name: "data", type: "bytes" },
          ],
          name: "upgradeToAndCall",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "validatorUtils",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "validatorWalletCreator",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "validatorWhitelistDisabled",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "wasmModuleRoot",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "withdrawableFunds",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "zombieNum", type: "uint256" }],
          name: "zombieAddress",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "zombieCount",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "zombieNum", type: "uint256" }],
          name: "zombieLatestStakedNode",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
      ],
    },
    OFTWrapper: {
      address: "0x86355F02119bdBC28ED6A4D5E0cA327Ca7730fFF",
      abi: [
        {
          inputs: [{ internalType: "uint256", name: "_defaultBps", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "oft", type: "address" },
            { indexed: false, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "WrapperFeeWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes2", name: "partnerId", type: "bytes2" },
            { indexed: false, internalType: "address", name: "token", type: "address" },
            { indexed: false, internalType: "uint256", name: "wrapperFee", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "callerFee", type: "uint256" },
          ],
          name: "WrapperFees",
          type: "event",
        },
        {
          inputs: [],
          name: "BPS_DENOMINATOR",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_UINT",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultBps",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes", name: "_toAddress", type: "bytes" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bool", name: "_useZro", type: "bool" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "estimateSendFee",
          outputs: [
            { internalType: "uint256", name: "nativeFee", type: "uint256" },
            { internalType: "uint256", name: "zroFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "bool", name: "_useZro", type: "bool" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "estimateSendFeeV2",
          outputs: [
            { internalType: "uint256", name: "nativeFee", type: "uint256" },
            { internalType: "uint256", name: "zroFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_token", type: "address" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_callerBps", type: "uint256" },
          ],
          name: "getAmountAndFees",
          outputs: [
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "wrapperFee", type: "uint256" },
            { internalType: "uint256", name: "callerFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          name: "oftBps",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes", name: "_toAddress", type: "bytes" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            { internalType: "address payable", name: "_refundAddress", type: "address" },
            { internalType: "address", name: "_zroPaymentAddress", type: "address" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendOFT",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendOFTFeeV2",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendOFTV2",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_proxyOft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes", name: "_toAddress", type: "bytes" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            { internalType: "address payable", name: "_refundAddress", type: "address" },
            { internalType: "address", name: "_zroPaymentAddress", type: "address" },
            { internalType: "bytes", name: "_adapterParams", type: "bytes" },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendProxyOFT",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_proxyOft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendProxyOFTFeeV2",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_proxyOft", type: "address" },
            { internalType: "uint16", name: "_dstChainId", type: "uint16" },
            { internalType: "bytes32", name: "_toAddress", type: "bytes32" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
            { internalType: "uint256", name: "_minAmount", type: "uint256" },
            {
              components: [
                { internalType: "address payable", name: "refundAddress", type: "address" },
                { internalType: "address", name: "zroPaymentAddress", type: "address" },
                { internalType: "bytes", name: "adapterParams", type: "bytes" },
              ],
              internalType: "struct ICommonOFT.LzCallParams",
              name: "_callParams",
              type: "tuple",
            },
            {
              components: [
                { internalType: "uint256", name: "callerBps", type: "uint256" },
                { internalType: "address", name: "caller", type: "address" },
                { internalType: "bytes2", name: "partnerId", type: "bytes2" },
              ],
              internalType: "struct IOFTWrapper.FeeObj",
              name: "_feeObj",
              type: "tuple",
            },
          ],
          name: "sendProxyOFTV2",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "_defaultBps", type: "uint256" }],
          name: "setDefaultBps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_token", type: "address" },
            { internalType: "uint256", name: "_bps", type: "uint256" },
          ],
          name: "setOFTBps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_oft", type: "address" },
            { internalType: "address", name: "_to", type: "address" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
          ],
          name: "withdrawFees",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
  },
} as const;

export default externalContracts;
